syntax = "proto3";
package zigbeealliance.distributedcomplianceledger.compliance;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "compliance/compliance_info.proto";
import "compliance/certified_model.proto";
import "compliance/revoked_model.proto";
import "compliance/provisional_model.proto";
import "compliance/device_software_compliance.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/zigbee-alliance/distributed-compliance-ledger/x/compliance/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a ComplianceInfo by index.
	rpc ComplianceInfo(QueryGetComplianceInfoRequest) returns (QueryGetComplianceInfoResponse) {
		option (google.api.http).get = "/dcl/compliance/compliance-info/{vid}/{pid}/{softwareVersion}/{certificationType}";
	}

	// Queries a list of ComplianceInfo items.
	rpc ComplianceInfoAll(QueryAllComplianceInfoRequest) returns (QueryAllComplianceInfoResponse) {
		option (google.api.http).get = "/dcl/compliance/compliance-info";
	}

// Queries a CertifiedModel by index.
	rpc CertifiedModel(QueryGetCertifiedModelRequest) returns (QueryGetCertifiedModelResponse) {
		option (google.api.http).get = "/dcl/compliance/certified-models/{vid}/{pid}/{softwareVersion}/{certificationType}";
	}

	// Queries a list of CertifiedModel items.
	rpc CertifiedModelAll(QueryAllCertifiedModelRequest) returns (QueryAllCertifiedModelResponse) {
		option (google.api.http).get = "/dcl/compliance/certified-models";
	}

// Queries a RevokedModel by index.
	rpc RevokedModel(QueryGetRevokedModelRequest) returns (QueryGetRevokedModelResponse) {
		option (google.api.http).get = "/dcl/compliance/revoked-models/{vid}/{pid}/{softwareVersion}/{certificationType}";
	}

	// Queries a list of RevokedModel items.
	rpc RevokedModelAll(QueryAllRevokedModelRequest) returns (QueryAllRevokedModelResponse) {
		option (google.api.http).get = "/dcl/compliance/revoked-models";
	}

// Queries a ProvisionalModel by index.
	rpc ProvisionalModel(QueryGetProvisionalModelRequest) returns (QueryGetProvisionalModelResponse) {
		option (google.api.http).get = "/dcl/compliance/provisional-models/{vid}/{pid}/{softwareVersion}/{certificationType}";
	}

	// Queries a list of ProvisionalModel items.
	rpc ProvisionalModelAll(QueryAllProvisionalModelRequest) returns (QueryAllProvisionalModelResponse) {
		option (google.api.http).get = "/dcl/compliance/provisional-models";
	}

// Queries a DeviceSoftwareCompliance by index.
	rpc DeviceSoftwareCompliance(QueryGetDeviceSoftwareComplianceRequest) returns (QueryGetDeviceSoftwareComplianceResponse) {
		option (google.api.http).get = "/dcl/compliance/device-software-compliance/{CDCertificateID}";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetComplianceInfoRequest {
  int32 vid = 1;
  int32 pid = 2;
  uint32 softwareVersion = 3;
  string certificationType = 4;

}

message QueryGetComplianceInfoResponse {
	ComplianceInfo complianceInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllComplianceInfoRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllComplianceInfoResponse {
	repeated ComplianceInfo complianceInfo = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetCertifiedModelRequest {
  int32 vid = 1;
  int32 pid = 2;
  uint32 softwareVersion = 3;
  string certificationType = 4;

}

message QueryGetCertifiedModelResponse {
	CertifiedModel certifiedModel = 1 [(gogoproto.nullable) = false];
}

message QueryAllCertifiedModelRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCertifiedModelResponse {
	repeated CertifiedModel certifiedModel = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetRevokedModelRequest {
  int32 vid = 1;
  int32 pid = 2;
  uint32 softwareVersion = 3;
  string certificationType = 4;

}

message QueryGetRevokedModelResponse {
	RevokedModel revokedModel = 1 [(gogoproto.nullable) = false];
}

message QueryAllRevokedModelRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRevokedModelResponse {
	repeated RevokedModel revokedModel = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetProvisionalModelRequest {
  int32 vid = 1;
  int32 pid = 2;
  uint32 softwareVersion = 3;
  string certificationType = 4;

}

message QueryGetProvisionalModelResponse {
	ProvisionalModel provisionalModel = 1 [(gogoproto.nullable) = false];
}

message QueryAllProvisionalModelRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllProvisionalModelResponse {
	repeated ProvisionalModel provisionalModel = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDeviceSoftwareComplianceRequest {
	  string CDCertificateID = 1;

}

message QueryGetDeviceSoftwareComplianceResponse {
	repeated ComplianceInfo complianceInfo = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
